library(dplyr)
library(survival)

## Table 1. Baseline characteristics of study cohort.

# Filter of database for . Patients not meeting the baseline criteria for early-stage systemic sclerosis are removed
df_filtered_baseline <- Database %>%
  filter(VISIT == "Baseline visit", CEOCCUR == 0)

## Total number of included patients
n_total <- nrow(df_filtered_baseline)
n_total

# Gender
n_male <- sum(df_filtered_baseline$SEX == 0, na.rm = TRUE)
pct_male <- round(100 * n_male / n_total, 1)
cat("Male:", n_male, "(", pct_male, "%)\n")

# Age
mean_age <- round(mean(df_filtered_baseline$AGE, na.rm = TRUE), 1)
sd_age <- round(sd(df_filtered_baseline$AGE, na.rm = TRUE), 1)
cat("Age:", mean_age, "(", sd_age, ")\n")

# Ever smoked
n_ever_smoked <- sum(df_filtered_baseline$SMOKE == 1, na.rm = TRUE)
pct_ever_smoked <- round(100 * n_ever_smoked / n_total, 1)
cat("Ever smoked:", n_ever_smoked, "(", pct_ever_smoked, "%)\n")

# Current smoking
n_smoking_now <- sum(df_filtered_baseline$SMOKING == 1, na.rm = TRUE)
pct_smoking_now <- round(100 * n_smoking_now / n_total, 1)
cat("Current smoking:", n_smoking_now, "(", pct_smoking_now, "%)\n")

# ESR
esr_median <- median(df_filtered_baseline$LBTEST_ESR, na.rm = TRUE)
esr_q1 <- quantile(df_filtered_baseline$LBTEST_ESR, 0.25, na.rm = TRUE)
esr_q3 <- quantile(df_filtered_baseline$LBTEST_ESR, 0.75, na.rm = TRUE)
cat("ESR:", esr_median, "(", esr_q1, "-", esr_q3, ")\n")

# Capillary density
cap_median <- median(df_filtered_baseline$LBTEST_CAPDEN, na.rm = TRUE)
cap_q1 <- quantile(df_filtered_baseline$LBTEST_CAPDEN, 0.25, na.rm = TRUE)
cap_q3 <- quantile(df_filtered_baseline$LBTEST_CAPDEN, 0.75, na.rm = TRUE)
cat("Capillary density:", cap_median, "(", cap_q1, "-", cap_q3, ")\n")

# Raynaud's Phenomenon
n_rp <- sum(df_filtered_baseline$RPYN == 1, na.rm = TRUE)
pct_rp <- round(100 * n_rp / n_total, 1)
cat("Raynaud's phenomenon:", n_rp, "(", pct_rp, "%)\n")

rp_median <- median(df_filtered_baseline$RPDUR, na.rm = TRUE)
rp_q1 <- quantile(df_filtered_baseline$RPDUR, 0.25, na.rm = TRUE)
rp_q3 <- quantile(df_filtered_baseline$RPDUR, 0.75, na.rm = TRUE)
cat("RP duration (months):", rp_median, "(", rp_q1, "-", rp_q3, ")\n")

# Puffy fingers
n_pf <- sum(df_filtered_baseline$PUFFYFING == 1, na.rm = TRUE)
pct_pf <- round(100 * n_pf / n_total, 1)
cat("Puffy fingers:", n_pf, "(", pct_pf, "%)\n")

pf_median <- median(df_filtered_baseline$PUFFYDUR, na.rm = TRUE)
pf_q1 <- quantile(df_filtered_baseline$PUFFYDUR, 0.25, na.rm = TRUE)
pf_q3 <- quantile(df_filtered_baseline$PUFFYDUR, 0.75, na.rm = TRUE)
cat("Puffy finger duration (months):", pf_median, "(", pf_q1, "-", pf_q3, ")\n")

# ANA and ENA positivity
ana_n <- sum(df_filtered_baseline$LBTEST_ANA == 1, na.rm = TRUE)
ena_n <- sum(df_filtered_baseline$LBTEST_ENA == 1, na.rm = TRUE)
cat("ANA positive:", ana_n, "(", round(ana_n / n_total * 100, 1), "%)\n")
cat("ENA positive:", ena_n, "(", round(ena_n / n_total * 100, 1), "%)\n")

# Autoantibodies
aca_n  <- sum(df_filtered_baseline$LBTEST_ACA == 1, na.rm = TRUE)
ata_n  <- sum(df_filtered_baseline$LBTEST_ATA == 1, na.rm = TRUE)
ara_n  <- sum(df_filtered_baseline$LBTEST_ARA == 1, na.rm = TRUE)
fib_n  <- sum(df_filtered_baseline$LBTEST_AntiFibrillarin == 1, na.rm = TRUE)
nor_n  <- sum(df_filtered_baseline$LBTEST_AntiNOR90 == 1, na.rm = TRUE)
pms_n  <- sum(df_filtered_baseline$LBTEST_AntiPMScl == 1, na.rm = TRUE)
ku_n   <- sum(df_filtered_baseline$LBTEST_AntiKu == 1, na.rm = TRUE)
pdgfr_n<- sum(df_filtered_baseline$LBTEST_AntiPDGFR == 1, na.rm = TRUE)
ssa_n  <- sum(df_filtered_baseline$LBTEST_AntiSSARo == 1, na.rm = TRUE)
his_n  <- sum(df_filtered_baseline$LBTEST_Antihiston == 1, na.rm = TRUE)
jo1_n  <- sum(df_filtered_baseline$LBTEST_AntiJo1 == 1, na.rm = TRUE)
sm_n   <- sum(df_filtered_baseline$LBTEST_AntiSM == 1, na.rm = TRUE)
rnp_n  <- sum(df_filtered_baseline$LBTEST_AntiRNP == 1, na.rm = TRUE)
ribp_n <- sum(df_filtered_baseline$LBTEST_AntiribosomaalP == 1, na.rm = TRUE)

cat("ACA positive:", aca_n,  "(", round(100 * aca_n  / n_total, 1), "%)\n")
cat("ATA positive:", ata_n,  "(", round(100 * ata_n  / n_total, 1), "%)\n")
cat("ARA positive:", ara_n,  "(", round(100 * ara_n  / n_total, 1), "%)\n")
cat("Anti-Fibrillarin positive:", fib_n,  "(", round(100 * fib_n  / n_total, 1), "%)\n")
cat("Anti-NOR90 positive:", nor_n,  "(", round(100 * nor_n  / n_total, 1), "%)\n")
cat("Anti-PMScl positive:", pms_n,  "(", round(100 * pms_n  / n_total, 1), "%)\n")
cat("Anti-Ku positive:", ku_n,  "(", round(100 * ku_n  / n_total, 1), "%)\n")
cat("Anti-PDGFR positive:", pdgfr_n, "(", round(100 * pdgfr_n / n_total, 1), "%)\n")
cat("Anti-SSA/Ro positive:", ssa_n,  "(", round(100 * ssa_n  / n_total, 1), "%)\n")
cat("Anti-histon positive:", his_n,  "(", round(100 * his_n  / n_total, 1), "%)\n")
cat("Anti-Jo1 positive:", jo1_n,  "(", round(100 * jo1_n  / n_total, 1), "%)\n")
cat("Anti-SM positive:", sm_n,  "(", round(100 * sm_n  / n_total, 1), "%)\n")
cat("Anti-RNP positive:", rnp_n,  "(", round(100 * rnp_n  / n_total, 1), "%)\n")
cat("Anti-ribosomaal P positive:", ribp_n, "(", round(100 * ribp_n / n_total, 1), "%)\n")


## Figure 2. Cumulative incidence function for progression, including 95% CI with A time-to-event summary table was added to display the number of patients at risk, lost to follow-up, and progression events at each time point (year)

# Filtering dataset for progression analysis
df_filtered_event <- subset(Database, VISIT == "Follow-up" &  CNSR %in% c(0, 1))

surv_object <- Surv(pmin(df_filtered_event$ASTDT_years), df_filtered_event$CNSR)
fit <- survfit(surv_object ~ 1)
summary_fit <- summary(fit, times = c(0, 1, 2, 3, 4, 5))

time_points <- summary_fit$time
n_risk <- summary_fit$n.risk
n_event <- summary_fit$n.event
n_censor <- summary_fit$n.censor
cumulative_lost <- cumsum(n_censor)
cumulative_events <- cumsum(n_event)
surv_prob <- summary_fit$surv
cumulative_incidence <- 1 - surv_prob

dev.new(width = 7, height = 6)
par(mar = c(8, 5, 2, 5))
plot(fit,
     fun = function(x) {1 - x},
     xlab = "Time (years)",
     ylab = "Cumulative Incidence",
     main = "Cumulative Incidence Function for Progression",
     xlim = c(0, 5),
     ylim = c(0, 1),
     col = c("black"),
     lwd = c(2),
     lty = 1,
     mark.time = TRUE)
legend("topright",
       legend = c("Cumulative Incidence", "95% CI"),
       col = c("black", "black"),
       lty = c(1, 2),
       lwd = c(2, 1))
mtext("At risk", side = 1, line = 5, at = -1, adj = 0, cex = 1)
mtext("Lost", side = 1, line = 6, at = -1, adj = 0, cex = 1)
mtext("Events", side = 1, line = 7, at = -1, adj = 0, cex = 1)

for (i in 1:length(time_points)) {
  mtext(n_risk[i], side = 1, line = 5, at = time_points[i], adj = 0.5, cex = 1)
  mtext(cumulative_lost[i], side = 1, line = 6, at = time_points[i], adj = 0.5, cex = 1)
  mtext(cumulative_events[i], side = 1, line = 7, at = time_points[i], adj = 0.5, cex = 1)
}

# Median time to progression with IQR
p25_index <- which.min(abs(surv_prob - 0.75))
p75_index <- which.min(abs(surv_prob - 0.25))
p25_survival <- time_points[p25_index]
p75_survival <- time_points[p75_index]
median_survival <- median(time_points)

print(paste("Median survival time:", median_survival))
print(paste("25th percentile survival time:", p25_survival))
print(paste("75th percentile survival time:", p75_survival))

## Figure 3: Cumulative incidence function by ENA status
fit <- survfit(surv_object ~ ENA_GRP, data = df_filtered_event)
plot(fit,
     fun = function(x) {1 - x},
     xlab = "Time (years)",
     ylab = "Cumulative Incidence",
     main = "Cumulative Incidence by ENA Status",
     xlim = c(0, 5),
     ylim = c(0, 1),
     col = c("#900022", "#121591", "#888888", "black"),
     lwd = 2,
     mark.time = TRUE)

legend("bottomright",
       legend = c("ENA_ACA", "ENA_ATA", "ENA_other", "ENA_negative"),
       col = c("#900022", "#121591", "#888888", "black"),
       lty = 1,
       lwd = 2)


## Figure 4: Cumulative incidence function by telangiectasia status
fit <- survfit(surv_object ~ strata(CLVAL), data = df_filtered_event)
plot(fit,
     fun = function(x) {1 - x},
     xlab = "Time (years)",
     ylab = "Cumulative Incidence",
     main = "Cumulative Incidence by Telangiectasia Status",
     xlim = c(0, 5),
     ylim = c(0, 1),
     col = c("#888888", "black"),
     lwd = 2,
     mark.time = TRUE)
legend("topright",
       legend = c("Telangiectasia positive", "Telangiectasia negative"),
       col = c("black", "#888888"),
       lty = 1,
       lwd = 2)

## Figure 5: Cumulative incidence function by NCM mean capillary density divided into ≤ 7 and > 7
fit <- survfit(surv_object ~ factor(LBTEST4, levels = c("1", "2")), data = df_filtered_event)
plot(fit,
     fun = function(x) {1 - x},
     xlab = "Time (years)",
     ylab = "Cumulative Incidence",
     main = "Cumulative Incidence by Mean Capillary Density",
     xlim = c(0, 5),
     ylim = c(0, 1),
     col = c("black", "#888888"),
     lwd = 2,
     mark.time = TRUE)
legend("bottomright",
       legend = c("Mean density ≤ 7", "Mean density > 7"),
       col = c("black", "#888888"),
       lty = 1,
       lwd = 2)

## Figure 6: Cumulative incidence function by gender
fit <- survfit(surv_object ~ SEX, data = df_filtered_event)
plot(fit,
     fun = function(x) {1 - x},
     xlab = "Time (years)",
     ylab = "Cumulative Incidence",
     main = "Cumulative Incidence by Sex",
     xlim = c(0, 5),
     ylim = c(0, 1),
     col = c("black", "#888888"),
     lwd = 2,
     mark.time = TRUE)
legend("topright",
       legend = c("Male", "Female"),
       col = c("black", "#888888"),
       lty = 1,
       lwd = 2)

## Figure 7: Cumulative incidence function by age group, stratified into 20-45 years, 45-60 years, and 60+ years
fit <- survfit(surv_object ~ AGE, data = df_filtered_event)
plot(fit,
     fun = function(x) {1 - x},
     xlab = "Time (years)",
     ylab = "Cumulative Incidence",
     main = "Cumulative Incidence by Age Group",
     xlim = c(0, 5),
     ylim = c(0, 1),
     col = c("black", "#888888", "#121591"),
     lwd = 2,
     mark.time = TRUE)
legend("topright",
       legend = c("Age 20-45", "Age 45-60", "Age 60+"),
       col = c("black", "#888888", "#121591"),
       lty = 1,
       lwd = 2)


# Cox model for ENA group
surv_obj <- Surv(df_filtered_event$TIBDY, df_filtered_event$CEOCCUR)
cox_ENA <- coxph(surv_obj ~ ENAGRP, data = df_filtered_event)
summary(cox_ENA)


# Age group (3 classes)
cox_AGE <- coxph(surv_obj ~ AGEGR3, data = df_filtered_event)
summary_AGE <- summary(cox_AGE)
print(summary_AGE)


# Telangiectasia
cox_TEL <- coxph(Surv(df_filtered_event$TIBDY, df_filtered_event$CEOCCUR) ~ TELANG, data = df_filtered_event)
summary(cox_TEL)


# Capillary density (mean ≤ 7 vs. > 7) - reversed order
cox_CAPDENS <- coxph(Surv(df_filtered_event$TIBDY, df_filtered_event$CEOCCUR) ~ factor(CAPDENS7, levels = c("2", "1")), data = df_filtered_event)
summary_CAPDENS <- summary(cox_CAPDENS)
print(summary_CAPDENS)


# Scleroderma pattern (Nailfold Capillaroscopy)
cox_SCLERPAT <- coxph(Surv(df_filtered_event$TIBDY, df_filtered_event$CEOCCUR) ~ NCM_SCLERPAT, data = df_filtered_event)
summary_SCLERPAT <- summary(cox_SCLERPAT)
print(summary_SCLERPAT)


# Puffy Fingers
cox_PF <- coxph(Surv(df_filtered_event$TIBDY, df_filtered_event$CEOCCUR) ~ PUFFYFING, data = df_filtered_event)
summary_PF <- summary(cox_PF)
print(summary_PF)

## Table 3: Log-rank analysis by subgroup
## Log-rank tests

# ENA status
log_rank_test <- survdiff(surv_object ~ ENA_GRP, data = df_filtered_event)
print(log_rank_test)

# AGE
log_rank_test <- survdiff(Surv(pmin(df_filtered_event$ASTDT_years, 5), df_filtered_event$CNSR) ~ AGE, data = df_filtered_event)
print(log_rank_test)

# SEX
log_rank_test <- survdiff(Surv(pmin(df_filtered_event$ASTDT_years, 5), df_filtered_event$CNSR) ~ SEX, data = df_filtered_event)
print(log_rank_test)

# Telengiectasia
log_rank_test <- survdiff(Surv(pmin(df_filtered_event$ASTDT_years, 5), df_filtered_event$CNSR) ~ CLVAL, data = df_filtered_event)
print(log_rank_test)

# Capillary density
log_rank_test <- survdiff(Surv(pmin(df_filtered_event$ASTDT_years, 5), df_filtered_event$CNSR) ~ factor(LBTEST4, levels = c("1", "2")), data = df_filtered_event)
print(log_rank_test)

# Scleroderma pattern
log_rank_test <- survdiff(Surv(pmin(df_filtered_event$TIBDY, 5), df_filtered_event$CEOCCUR) ~ NCM_SCLERPAT, data = df_filtered_event)
print(log_rank_test)

# Puffy Fingers
log_rank_test <- survdiff(Surv(pmin(df_filtered_event$TIBDY, 5), df_filtered_event$CEOCCUR) ~ PUFFYFING, data = df_filtered_event)
print(log_rank_test)
